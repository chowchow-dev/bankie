# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.21.1
        id: go

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v4

      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/
          which migrate

      - name: Set environment variables
        env:
          DB_DRIVER: ${{ secrets.DB_DRIVER }}
          DB_SOURCE: ${{ secrets.DB_SOURCE }}
          SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
        run: echo "Environment variables set"

      - name: Run migrations
        run: make migrateup

      - name: Test
        run: make test
